// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model users {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  hash     String
  salt     String
  surname  String
  name     String
  lastname String
  role     Role     @default(user)
  cart     carts[]
  orders   orders[]
  deleted  Boolean  @default(false)
}

model products {
  id              Int               @id @default(autoincrement())
  name            String
  price           Int
  description     String
  image           images            @relation(fields: [image_id], references: [id])
  image_id        Int
  type            types             @relation(fields: [type_id], references: [id])
  type_id         Int
  carts_products  carts_products[]
  deleted         Boolean           @default(false)
  characteristics characteristics[]
  order_products  order_products[]
}

model characteristics {
  id         Int      @id @default(autoincrement())
  product    products @relation(fields: [product_id], references: [id])
  product_id Int
  key        String
  value      String
}

model types {
  id       Int        @id @default(autoincrement())
  name     String
  url      String     @unique
  image_id Int
  image    images     @relation(fields: [image_id], references: [id])
  deleted  Boolean    @default(false)
  products products[]
}

model images {
  id           Int        @id @default(autoincrement())
  filename     String
  originalname String
  mimetype     String
  size         Int
  product      products[]
  type         types[]
}

model carts {
  id             Int              @id @default(autoincrement())
  user_id        Int              @unique
  user           users            @relation(fields: [user_id], references: [id])
  carts_products carts_products[]
}

model orders {
  id             Int              @id @default(autoincrement())
  user_id        Int
  user           users            @relation(fields: [user_id], references: [id])
  order_products order_products[]
  summary        Int
  quantity       Int
}

model order_products {
  id         Int      @id @default(autoincrement())
  order_id   Int
  order      orders   @relation(fields: [order_id], references: [id])
  product_id Int
  product    products @relation(fields: [product_id], references: [id])
  quantity   Int
}

model carts_products {
  id         Int      @id @default(autoincrement())
  cart_id    Int
  cart       carts    @relation(fields: [cart_id], references: [id])
  product_id Int
  product    products @relation(fields: [product_id], references: [id])
  quantity   Int
}
