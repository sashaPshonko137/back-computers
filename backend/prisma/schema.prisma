// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model users {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  hash     String
  salt     String
  surname  String
  name     String
  lastname String
  role     Role     @default(user)
  cart     carts[]
  orders   orders[]
  deleted  Boolean  @default(false)
  custom_builds custom_builds[]
}

model products {
  id              Int               @id @default(autoincrement())
  name            String
  price           Int
  description     String
  image           images            @relation(fields: [image_id], references: [id])
  image_id        Int
  type            types             @relation(fields: [type_id], references: [id])
  type_id         Int
  carts_products  carts_products[]
  deleted         Boolean           @default(false)

  socket          String?
  ram_type        String?
  ram_types       ram_type[]
  form_factor     String?
  gpu_width       Int?
  gpu_height      Int?
  ram_capacity    Int?

  characteristics characteristics[]
  order_products  order_products[]
  custom_builds_processor custom_builds[] @relation("Processor")
  custom_builds_motherboard custom_builds[] @relation("Motherboard")
  custom_builds_videocard custom_builds[] @relation("Videocard")
  custom_builds_ram custom_builds[] @relation("Ram")
  custom_builds_powerblock custom_builds[] @relation("Powerblock")
  custom_builds_drive custom_builds[] @relation("Drive")
  custom_builds_case custom_builds[] @relation("Case")
  custom_builds_cooling custom_builds[] @relation("Cooling")

}

model characteristics {
  id         Int      @id @default(autoincrement())
  product    products @relation(fields: [product_id], references: [id])
  product_id Int
  key        String
  value      String
  rowKey     String
}

model types {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  url      String     @unique
  image_id Int
  image    images     @relation(fields: [image_id], references: [id])
  deleted  Boolean    @default(false)
  products products[]
}

model images {
  id           Int        @id @default(autoincrement())
  filename     String
  originalname String
  mimetype     String
  size         Int
  deleted  Boolean  @default(false)
  product      products[]
  type         types[]
}

model carts {
  id             Int              @id @default(autoincrement())
  user_id        Int              @unique
  user           users            @relation(fields: [user_id], references: [id])
  carts_products carts_products[]
}

model orders {
  id             Int              @id @default(autoincrement())
  user_id        Int
  user           users            @relation(fields: [user_id], references: [id])
  order_products order_products[]
  summary        Int
  quantity       Int
  deleted        Boolean          @default(false)
  status         String           @default("Ожидается оплата")
  address        String
  created        DateTime         @default(now())
}

model order_products {
  id         Int      @id @default(autoincrement())
  order_id   Int
  order      orders   @relation(fields: [order_id], references: [id])
  product_id Int
  product    products @relation(fields: [product_id], references: [id])
  quantity   Int
}

model carts_products {
  id         Int      @id @default(autoincrement())
  cart_id    Int
  cart       carts    @relation(fields: [cart_id], references: [id])
  product_id Int
  product    products @relation(fields: [product_id], references: [id])
  quantity   Int
}

model custom_builds {
  id             Int        @id @default(autoincrement())
  user_id        Int
  user           users      @relation(fields: [user_id], references: [id])
  created        DateTime   @default(now())

  processor_id   Int?
  processor      products?   @relation("Processor", fields: [processor_id], references: [id])
  
  motherboard_id Int?
  motherboard    products?   @relation("Motherboard", fields: [motherboard_id], references: [id])

  videocard_id   Int?
  videocard      products?   @relation("Videocard", fields: [videocard_id], references: [id])

  ram_id         Int?
  ram            products?   @relation("Ram", fields: [ram_id], references: [id])
  ram_quantity   Int?

  powerblock_id  Int?
  powerblock     products?   @relation("Powerblock", fields: [powerblock_id], references: [id])

  drive_id       Int?
  drive          products?   @relation("Drive", fields: [drive_id], references: [id])

  case_id        Int?
  case           products?   @relation("Case", fields: [case_id], references: [id])

  cooling_id     Int?
  cooling        products?   @relation("Cooling", fields: [cooling_id], references: [id])

}

model ram_type {
  id            Int         @id @default(autoincrement())
  name          String
  product_id    Int
  product       products @relation(fields: [product_id], references: [id])
}